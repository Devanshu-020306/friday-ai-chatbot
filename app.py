from flask import Flask, render_template, request, jsonify
from flask_cors import CORS
from googletrans import Translator   # тЬЕ translation module

app = Flask(__name__, template_folder="templates", static_folder="static")
CORS(app)

translator = Translator()

# ЁЯФ╣ Responses dictionary (English + Hindi + Rajasthani + Bengali тАУ can add more)
responses = {
    "en": {
        "fee deadline": "ЁЯТ░ The last date to pay fees is the 25th of each month.",
        "fee structure": "ЁЯТ░ Fee Structure: Tuition тВ╣25,000, Hostel тВ╣15,000, Transport тВ╣8,000, Exam тВ╣2,000.",
        "documents": "ЁЯУД Required docs: 10th+12th marksheets, Transfer Certificate, Aadhar card, Photos, Caste certificate.",
        "admission process": "ЁЯУЭ Admission starts in June. Fill form, attach documents, submit online or office, pay initial fee, seat via cutoff/merit.",
        "default": "ЁЯдФ Sorry, I donтАЩt know that yet."
    },
    "hi": {
        "fee deadline": "ЁЯТ░ рдлреАрд╕ рдЬрдорд╛ рдХрд░рдиреЗ рдХреА рдЕрдВрддрд┐рдо рддрд┐рдерд┐ рд╣рд░ рдорд╣реАрдиреЗ рдХреА 25 рддрд╛рд░реАрдЦ рд╣реИред",
        "fee structure": "ЁЯТ░ рдлреАрд╕ рд╕рдВрд░рдЪрдирд╛: рдЯреНрдпреВрд╢рди тВ╣25,000, рд╣реЙрд╕реНрдЯрд▓ тВ╣15,000, рдЯреНрд░рд╛рдВрд╕рдкреЛрд░реНрдЯ тВ╣8,000, рдкрд░реАрдХреНрд╖рд╛ тВ╣2,000ред",
        "documents": "ЁЯУД рдЖрд╡рд╢реНрдпрдХ рджрд╕реНрддрд╛рд╡реЗрдЬрд╝: 10рд╡реАрдВ+12рд╡реАрдВ рдорд╛рд░реНрдХрд╢реАрдЯ, рдЯреНрд░рд╛рдВрд╕рдлрд░ рд╕рд░реНрдЯрд┐рдлрд┐рдХреЗрдЯ, рдЖрдзрд╛рд░ рдХрд╛рд░реНрдб, рдлреЛрдЯреЛ, рдЬрд╛рддрд┐ рдкреНрд░рдорд╛рдг рдкрддреНрд░ред",
        "admission process": "ЁЯУЭ рдкреНрд░рд╡реЗрд╢ рдЬреВрди рд╕реЗ рд╢реБрд░реВред рдлреЙрд░реНрдо рднрд░реЗрдВ, рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рдЬрдорд╛ рдХрд░реЗрдВ, рд╢реБрд▓реНрдХ рднрд░реЗрдВ, рдореЗрд░рд┐рдЯ/рдХрдЯрдСрдл рдХреЗ рдЕрдиреБрд╕рд╛рд░ рд╕реАрдЯ рдкрдХреНрдХреА рдХрд░реЗрдВред",
        "default": "ЁЯдФ рдХреНрд╖рдорд╛ рдХрд░реЗрдВ, рдпрд╣ рдЬрд╛рдирдХрд╛рд░реА рдЙрдкрд▓рдмреНрдз рдирд╣реАрдВ рд╣реИред"
    },
    "raj": {
        "fee deadline": "ЁЯТ░ рдлреАрд╕ рдЬрдорд╛ рдХрд░рди рд░реА рдЖрдЦрд░реА рддрд╛рд░реАрдЦ реирел рд╣реИред",
        "fee structure": "ЁЯТ░ рдлреАрд╕ рд╕рд╛рдВрдЪреЛ: рдЯреНрдпреВрд╢рди тВ╣25,000, рд╣реЙрд╕реНрдЯрд▓ тВ╣15,000, рдЯреНрд░рд╛рдВрд╕рдкреЛрд░реНрдЯ тВ╣8,000, рдкрд░реАрдХреНрд╖рд╛ тВ╣2,000ред",
        "documents": "ЁЯУД рдЬрд░реВрд░реА рдХрд╛рдЧрдж: 10рд╡реАрдВ+12рд╡реАрдВ рдорд╛рд░реНрдХрд╢реАрдЯ, рдЯреНрд░рд╛рдВрд╕рдлрд░ рд╕рд░реНрдЯрд┐рдлрд┐рдХреЗрдЯ, рдЖрдзрд╛рд░ рдХрд╛рд░реНрдб, рдлреЛрдЯреЛ, рдЬрд╛рддрд┐ рдкреНрд░рдорд╛рдгред",
        "admission process": "ЁЯУЭ рдЬреВрди рд╕реВрдВ рджрд╛рдЦрд▓рд╛ рдЪрд╛рд▓реВред рдлреЙрд░реНрдо рднрд░реЛ, рдХрд╛рдЧрдж рдЬрдорд╛ рдХрд░реЛ, рдлреАрд╕ рднрд░реЛ, рдореЗрд░рд┐рдЯ/рдХрдЯрдСрдл рд╕реВрдВ рд╕реАрдЯ рдкрдХреНрдХреА рдХрд░реЛред",
        "default": "ЁЯдФ рдорд╛рдл рдХрд░рдЬреЛ, рд╣рд╛рдВ рдЬрд╛рдирдХрд╛рд░реА рдиреАрдВ рд╣реИред"
    },
    "bn": {
        "fee deadline": "ЁЯТ░ ржлрж┐ ржЬржорж╛ ржжрзЗржУржпрж╝рж╛рж░ рж╢рзЗрж╖ рждрж╛рж░рж┐ржЦ ржкрзНрж░рждрж┐ ржорж╛рж╕рзЗрж░ 25 рждрж╛рж░рж┐ржЦред",
        "fee structure": "ЁЯТ░ ржлрж┐ ржХрж╛ржарж╛ржорзЛ: ржЯрж┐ржЙрж╢ржи тВ╣25,000, рж╣рзЛрж╕рзНржЯрзЗрж▓ тВ╣15,000, ржЯрзНрж░рж╛ржирзНрж╕ржкрзЛрж░рзНржЯ тВ╣8,000, ржкрж░рзАржХрзНрж╖рж╛ тВ╣2,000ред",
        "documents": "ЁЯУД ржнрж░рзНрждрж┐ ржкрзНрж░ржпрж╝рзЛржЬржирзАржпрж╝ ржиржерж┐: 10ржо+12рж╢ ржорж╛рж░рзНржХрж╢рж┐ржЯ, ржЯрж┐рж╕рж┐, ржЖржзрж╛рж░ ржХрж╛рж░рзНржб, ржЫржмрж┐, ржЬрж╛рждрж┐ржЧржд ржкрзНрж░ржорж╛ржгред",
        "admission process": "ЁЯУЭ ржЬрзБржи ржерзЗржХрзЗ ржнрж░рзНрждрж┐ред ржлрж░рзНржо ржкрзВрж░ржг ржХрж░рзБржи, ржиржерж┐ ржЬржорж╛ ржХрж░рзБржи, ржлрж┐ ржжрж┐ржи, ржХрж╛ржЯржЕржл/ржорзЗрж░рж┐ржЯ ржЕржирзБржпрж╛ржпрж╝рзА ржЖрж╕ржи ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рзБржиред",
        "default": "ЁЯдФ ржЖржорж┐ ржЬрж╛ржирж┐ ржирж╛ред"
    }
}


# ЁЯФ╣ Intent detection (English only)
def detect_intent(message):
    msg = message.lower()
    if "fee structure" in msg:
        return "fee structure"
    if "fee" in msg and ("deadline" in msg or "last date" in msg):
        return "fee deadline"
    if "documents" in msg or "certificate" in msg or "doc" in msg:
        return "documents"
    if "admission" in msg or "apply" in msg or "process" in msg:
        return "admission process"
    return "default"


@app.route("/")
def home():
    return render_template("index.html")


@app.route("/chat", methods=["POST"])
def chat():
    data = request.json
    msg = data.get("message", "")
    target_lang = data.get("lang", "en")  # dropdown language chosen by user

    # 1. Detect + translate input to English for intent detection
    try:
        translated_to_en = translator.translate(msg, dest="en").text.lower()
    except:
        translated_to_en = msg.lower()  # fallback if translation fails

    # 2. Find intent
    intent = detect_intent(translated_to_en)

    # 3. Get response in selected language
    lang_res = responses.get(target_lang, responses["en"])
    response_text = lang_res.get(intent, lang_res["default"])

    return jsonify({"response": response_text})


if __name__ == "__main__":
    app.run(debug=True)